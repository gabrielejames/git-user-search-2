{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielejames/Desktop/task-30/client/src/components/GitLabDetails.js\";\nimport React from \"react\";\nimport bootstrap from \"bootstrap\";\nimport { Container } from \"react-bootstrap\";\nimport { Row } from \"react-bootstrap\";\nimport { Col } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../App.css';\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class GitLabDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.username,\n      userLoaded: false,\n      user: {},\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    let gitlabapi = '/gitlab/' + this.props.username;\n\n    try {\n      fetch(gitlabapi).then(res => res.json()).then(result => {\n        if ('message' in result) {\n          console.log(result.message);\n        } else {\n          this.setState({\n            user: result,\n            userLoaded: true\n          });\n          console.log(result.projects);\n        }\n      });\n    } catch {\n      console.log('Something went wrong');\n    }\n  }\n\n  makeProjects() {\n    let projects = this.state.user.projects;\n    console.log(projects);\n    let projectDetails = projects.map(project => {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: project.id,\n          children: [project.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 32\n          }, this), project.description, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 39\n          }, this), project.created_at, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 38\n          }, this), project.last_activity_at, /*#__PURE__*/_jsxDEV(\"a\", {\n            href: project.web_url,\n            children: \"See on web\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: projectDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    let user = this.state.user;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: [\"GitLab details for \", this.props.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), this.state.userLoaded ? /*#__PURE__*/_jsxDEV(Container, {\n        className: \"results\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"text-center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"basic-info\",\n            xs: 12,\n            lg: 4,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                id: \"img-top\",\n                src: user.avatar_url,\n                alt: \"...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Username: \", user.username]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Name: \", user.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"State: \", user.state]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"repo-info\",\n            lg: 7,\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Recent projects:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this), user.projects.map(project => {\n              /*#__PURE__*/\n              _jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: project.id,\n                  children: [project.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 44\n                  }, this), project.description, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 51\n                  }, this), project.created_at, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 50\n                  }, this), project.last_activity_at, /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: project.web_url,\n                    children: \"See on web\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 25\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-external\",\n              children: \"Go to Gabriele's gitHub repos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Loading user info...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","bootstrap","Container","Row","Col","Button","GitLabDetails","Component","constructor","props","state","username","userLoaded","user","error","componentDidMount","gitlabapi","fetch","then","res","json","result","console","log","message","setState","projects","makeProjects","projectDetails","map","project","id","name","description","created_at","last_activity_at","web_url","render","avatar_url"],"sources":["/Users/gabrielejames/Desktop/task-30/client/src/components/GitLabDetails.js"],"sourcesContent":["import React from \"react\";\nimport bootstrap from \"bootstrap\";\nimport { Container } from \"react-bootstrap\";\nimport { Row } from \"react-bootstrap\";\nimport { Col } from \"react-bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../App.css';\nimport { Button } from \"react-bootstrap\";\n\nexport class GitLabDetails extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n          username: this.props.username,\n          userLoaded: false,\n          user: {},\n          error: false\n        }\n    }\n\n    componentDidMount() {\n\n        let gitlabapi = '/gitlab/' + this.props.username;\n\n        try {\n            fetch(gitlabapi)\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        if ('message' in result){\n                            console.log(result.message)\n                        }else {\n                        this.setState({\n                          user: result,\n                          userLoaded: true\n                        }) \n                        console.log(result.projects)\n                        }  }   \n                )\n                    }catch {\n                console.log('Something went wrong');\n            }\n    }\n\n    makeProjects() {\n        let projects = this.state.user.projects;\n\n        console.log(projects)\n\n        let projectDetails = projects.map(project => {\n            <div>\n            <p id={project.id}>\n                {project.name} <br />\n                {project.description} <br />\n                {project.created_at} <br />\n                {project.last_activity_at}\n                <a href={project.web_url}>See on web</a>\n            </p>\n            <hr />\n            </div>\n        })\n\n        return (\n            <div>{projectDetails}</div>\n        )\n    }\n     \n\n    render () {\n\n        let user = this.state.user\n      \n\n\n\n        return (\n          \n            <div className=\"main\">\n                <h1 className=\"text-center\">GitLab details for {this.props.username}</h1>\n\n            {this.state.userLoaded ?\n            <Container className=\"results\">\n                <Row className=\"text-center\">\n                 \n                </Row>\n                <Row>\n                    <Col className=\"basic-info\" xs={12} lg={4}>\n                       <div className=\"text-center\" >\n                           <img id=\"img-top\" src={user.avatar_url}  alt=\"...\" />   \n                        </div> \n                        <div className=\"info-text\">\n                        <p>Username: {user.username}</p>\n                        <p>Name: {user.name} </p>\n                        <p>State: {user.state}</p>  \n                        \n                        \n                        </div>\n                    </Col>\n                    <Col className=\"repo-info\" lg={7}>\n                        <h3 >Recent projects:</h3>\n                    \n                        {user.projects.map(project => {\n                        <div>\n                        <p id={project.id}>\n                            {project.name} <br />\n                            {project.description} <br />\n                            {project.created_at} <br />\n                            {project.last_activity_at}\n                            <a href={project.web_url}>See on web</a>\n                        </p>\n                        <hr />\n                        </div>\n                        })\n                        }\n\n                        \n\n                    {/* <p id=\"repo-name\">\n                        Name: Fake repo<br />\n                        Description: <br />\n                        Creation date: <br />\n                        Last commit: <br />\n                        \n                    </p>\n                    <div className=\"commit-info\">\n                            <p>Commit info</p>\n                            <p>Commit info</p>\n                            <p>Commit info</p>\n                        </div>\n                    <hr />\n                    <p id=\"repo-name\">\n                        Name: <br />\n                        Description: <br />\n                        Creation date: <br />\n                        Last commit: <br />\n                    </p>\n                    <hr />\n                    <p id=\"repo-name\">\n                        Name: <br />\n                        Description: <br />\n                        Creation date: <br />\n                        Last commit: <br />\n                    </p>\n                    <hr /> */}\n                        \n                        <button className=\"btn-external\">Go to Gabriele's gitHub repos</button>\n                    </Col>\n                </Row>\n                \n\n            </Container> :\n            <Container>\n                <h3>Loading user info...</h3>\n            </Container>\n            }\n            </div>\n           \n        )\n    }\n\n     \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}