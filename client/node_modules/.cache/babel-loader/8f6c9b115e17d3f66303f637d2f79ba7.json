{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielejames/Desktop/task-30/client/src/components/GitHubRepos.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst dummrepos = require('Repos.json');\n\nclass GitHubRepos extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.username,\n      reposLoaded: false,\n      repos: []\n    };\n    this.makeRepoDetails = this.makeRepoDetails.bind(this);\n  }\n\n  makeRepoDetails() {\n    // map((anObjectMapped, index) => {\n    //     return (\n    //         <p key={`${anObjectMapped.name}_{anObjectMapped.email}`}>\n    //             {anObjectMapped.name} - {anObjectMapped.email}\n    //         </p>\n    console.log(this.state.repos);\n    let repos = this.state.repos.map((repo, index) => {\n      return;\n\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [repo.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 32\n          }, this), repo.description, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 36\n          }, this), repo.created_at, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 35\n          }, this), repo.updated_at, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 35\n          }, this), \"Last commits: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: repos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n  componentDidMount() {\n    try {\n      fetch('/githubrepos/' + this.props.username).then(res => res.json()).then(result => {\n        this.setState({\n          repos: result,\n          reposLoaded: true\n        });\n        console.log(result);\n      }, error => {\n        this.setState({\n          error\n        });\n        console.log(error);\n      });\n    } catch {\n      console.log('Something went wrong');\n    }\n  }\n\n  render() {\n    let repos = this.makeRepoDetails();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.props.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), this.state.reposLoaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Repos loaded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), this.state.repos.map((repo, index) => {\n          /*#__PURE__*/\n          _jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [repo.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 40\n              }, this), repo.description, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 44\n              }, this), repo.created_at, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 43\n              }, this), repo.updated_at, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 43\n              }, this), \"Last commits: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Something is wrong\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GitHubRepos;","map":{"version":3,"names":["React","dummrepos","require","GitHubRepos","Component","constructor","props","state","user","username","reposLoaded","repos","makeRepoDetails","bind","console","log","map","repo","index","name","description","created_at","updated_at","componentDidMount","fetch","then","res","json","result","setState","error","render"],"sources":["/Users/gabrielejames/Desktop/task-30/client/src/components/GitHubRepos.js"],"sourcesContent":["import React from \"react\";\nconst dummrepos = require('Repos.json')\n\nclass GitHubRepos extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user : this.props.username,\n            reposLoaded: false,\n            repos: []\n            \n        };  \n\n        this.makeRepoDetails = this.makeRepoDetails.bind(this)\n    };\n\n\n\n    makeRepoDetails() {\n\n\n\n\n\n\n        // map((anObjectMapped, index) => {\n        //     return (\n        //         <p key={`${anObjectMapped.name}_{anObjectMapped.email}`}>\n        //             {anObjectMapped.name} - {anObjectMapped.email}\n        //         </p>\n       \n        console.log(this.state.repos)\n      \n\n        let repos = this.state.repos.map((repo, index) => {\n            return\n            <div>\n                <p>{repo.name} <br/>\n                {repo.description} <br />\n                {repo.created_at} <br />\n                {repo.updated_at} <br />\n                Last commits: <br />\n                \n                </p>\n                <hr />\n            </div>\n        })\n\n        return (\n            <div>{repos}</div>\n        )\n        \n    }\n\n    componentDidMount() {\n\n        try {\n            fetch('/githubrepos/' + this.props.username)\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        this.setState({\n                          repos: result,\n                          reposLoaded: true\n                        })\n                        console.log(result)\n                    },\n                    (error) => {\n                        this.setState({error})\n                        console.log(error)\n                    }\n                )\n                \n            } catch {\n                console.log('Something went wrong');\n            }\n        \n    }\n\n    render () {\n        \n\n       let repos = this.makeRepoDetails()\n\n        return (\n            \n            <div>\n                <h2>{this.props.username}</h2>\n                {this.state.reposLoaded ?\n                <div>\n                <p>Repos loaded</p>\n                \n                   {this.state.repos.map((repo, index) => {\n                    \n                    <div>\n                        <p>{repo.name} <br/>\n                        {repo.description} <br />\n                        {repo.created_at} <br />\n                        {repo.updated_at} <br />\n                        Last commits: <br />\n                        \n                        </p>\n                        <hr />\n                    </div>\n                })\n                }\n                </div>\n                :\n                <p>Something is wrong</p>\n            \n            \n            }\n                \n            </div>\n        )\n    }\n\n}\n\nexport default GitHubRepos;"],"mappings":"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"},"metadata":{},"sourceType":"module"}