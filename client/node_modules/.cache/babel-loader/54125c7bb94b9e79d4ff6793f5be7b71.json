{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielejames/Desktop/task-30/client/src/components/GitLabCommits.js\";\nimport React from \"react\";\n/*\nThis component takes a gitLab project id as a prop and then fetches the project commits and renders them\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GitLabCommits extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      project_id: this.props.project_id,\n      isLoaded: false,\n      items: [],\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    //fetches the commits for the project whose id is received as props. the commits are spliced and saved to state\n    try {\n      fetch(`/gitlabrepo_commits/${this.props.project_id}`).then(res => res.json()).then(result => {\n        this.setState({\n          items: result.slice(0, 5),\n          isLoaded: true\n        });\n      }, error => {\n        this.setState({\n          error\n        });\n        console.log(error);\n      });\n    } catch {\n      console.log('Something went wrong');\n    }\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"commit-info\",\n        children: \"Error getting commits\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"commit-info\",\n        children: [\"Loading commits for \", this.props.repo_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Commits:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commit-info\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"date\",\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item.message\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GitLabCommits;","map":{"version":3,"names":["React","GitLabCommits","Component","constructor","props","state","project_id","isLoaded","items","error","componentDidMount","fetch","then","res","json","result","setState","slice","console","log","render","repo_name","map","item","message","id"],"sources":["/Users/gabrielejames/Desktop/task-30/client/src/components/GitLabCommits.js"],"sourcesContent":["import React from \"react\";\n\n/*\nThis component takes a gitLab project id as a prop and then fetches the project commits and renders them\n*/\n\nclass GitLabCommits extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            project_id : this.props.project_id,\n            isLoaded: false,\n            items: [],\n            error: false\n        };\n    }\n\n    componentDidMount() {\n\n        //fetches the commits for the project whose id is received as props. the commits are spliced and saved to state\n        try {\n            fetch(`/gitlabrepo_commits/${this.props.project_id}`)\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        this.setState({\n                          items: result.slice(0,5),\n                          isLoaded: true\n                        })\n                    },\n                    (error) => {\n                        this.setState({error})\n                        console.log(error)\n                    }\n                ) \n            } catch {\n                console.log('Something went wrong');\n            }\n        }\n\n\n    render () {\n        const { error, isLoaded,  items } = this.state;\n        \n        if (error) {\n            return(\n            <p className=\"commit-info\">Error getting commits</p>\n            )\n        }\n        else if (!isLoaded){\n        return (\n            <p className=\"commit-info\">Loading commits for {this.props.repo_name}</p>\n            \n        )}\n        else return(\n            <div>\n                <h6>Commits:</h6>\n                <div className=\"commit-info\">\n                    <ul className=\"date\">\n                    {items.map(item => (\n                        <li key={item.id}>{item.message}</li>\n                    ))\n                    }\n                    </ul>\n                </div>\n                \n            </div>\n        )\n    }\n\n}\n\nexport default GitLabCommits;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;;;;AAEA,MAAMC,aAAN,SAA4BD,KAAK,CAACE,SAAlC,CAA4C;EAExCC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACTC,UAAU,EAAG,KAAKF,KAAL,CAAWE,UADf;MAETC,QAAQ,EAAE,KAFD;MAGTC,KAAK,EAAE,EAHE;MAITC,KAAK,EAAE;IAJE,CAAb;EAMH;;EAEDC,iBAAiB,GAAG;IAEhB;IACA,IAAI;MACAC,KAAK,CAAE,uBAAsB,KAAKP,KAAL,CAAWE,UAAW,EAA9C,CAAL,CACKM,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;QACR,KAAKC,QAAL,CAAc;UACZR,KAAK,EAAEO,MAAM,CAACE,KAAP,CAAa,CAAb,EAAe,CAAf,CADK;UAEZV,QAAQ,EAAE;QAFE,CAAd;MAIH,CART,EASSE,KAAD,IAAW;QACP,KAAKO,QAAL,CAAc;UAACP;QAAD,CAAd;QACAS,OAAO,CAACC,GAAR,CAAYV,KAAZ;MACH,CAZT;IAcC,CAfL,CAeM,MAAM;MACJS,OAAO,CAACC,GAAR,CAAY,sBAAZ;IACH;EACJ;;EAGLC,MAAM,GAAI;IACN,MAAM;MAAEX,KAAF;MAASF,QAAT;MAAoBC;IAApB,IAA8B,KAAKH,KAAzC;;IAEA,IAAII,KAAJ,EAAW;MACP,oBACA;QAAG,SAAS,EAAC,aAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA;IAGH,CAJD,MAKK,IAAI,CAACF,QAAL,EAAc;MACnB,oBACI;QAAG,SAAS,EAAC,aAAb;QAAA,mCAAgD,KAAKH,KAAL,CAAWiB,SAA3D;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ;IAGE,CAJG,MAKA,oBACD;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAK,SAAS,EAAC,aAAf;QAAA,uBACI;UAAI,SAAS,EAAC,MAAd;UAAA,UACCb,KAAK,CAACc,GAAN,CAAUC,IAAI,iBACX;YAAA,UAAmBA,IAAI,CAACC;UAAxB,GAASD,IAAI,CAACE,EAAd;YAAA;YAAA;YAAA;UAAA,QADH;QADD;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADC;EAcR;;AA/DuC;;AAmE5C,eAAexB,aAAf"},"metadata":{},"sourceType":"module"}