{"ast":null,"code":"var _jsxFileName = \"/Users/gabrielejames/Desktop/task-30/client/src/components/GitLabResults.js\";\nimport React from \"react\";\nimport bootstrap from \"bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      username: this.props.username\n    };\n  }\n\n  componentDidMount() {\n    fetch(`/gitlab/${this.state.username}`).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.projects\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 16\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"date\",\n            children: [\"Created: \", item.created_at, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 52\n            }, this), \"Last activity: \", item.last_activity_at]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: item.web_url,\n            children: \"See project page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n}\n\nexport default MyComponent; //   <p id={user.projects[0].id}>\n//                         {user.projects[0].name} <br />\n//                         {user.projects[0].description} <br />\n//                         {user.projects[0].created_at} <br />\n//                         {user.projects[0].last_activity_at} <br />\n//                         <a href={user.projects[0].web_url}>See on web</a>\n//                         </p>","map":{"version":3,"names":["React","bootstrap","MyComponent","Component","constructor","props","state","error","isLoaded","items","username","componentDidMount","fetch","then","res","json","result","setState","projects","render","message","map","item","name","description","created_at","last_activity_at","web_url"],"sources":["/Users/gabrielejames/Desktop/task-30/client/src/components/GitLabResults.js"],"sourcesContent":["import React from \"react\";\nimport bootstrap from \"bootstrap\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../App.css';\n\nclass MyComponent extends React.Component {\n  \n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        isLoaded: false,\n        items: [],\n        username: this.props.username\n      };\n    }\n  \n    componentDidMount() {\n      fetch(`/gitlab/${this.state.username}`)\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.setState({\n              isLoaded: true,\n              items: result.projects\n            });\n          },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        )\n    }\n  \n    render() {\n      const { error, isLoaded, items } = this.state;\n      if (error) {\n        return <div>Error: {error.message}</div>;\n      } else if (!isLoaded) {\n        return <div>Loading...</div>;\n      } else {\n        return (\n          <div>\n            {items.map(item => (\n                <div>\n                    <h5>{item.name}</h5>\n                    <p>{item.description}</p>\n                    <p className=\"date\">\n                        Created: {item.created_at} <br />\n                        Last activity: {item.last_activity_at}\n                    </p>\n                    <a href={item.web_url}>See project page</a>\n                </div>\n            ))}\n          </div>\n        );\n      }\n    }\n  }\n\n  export default MyComponent\n\n\n//   <p id={user.projects[0].id}>\n//                         {user.projects[0].name} <br />\n//                         {user.projects[0].description} <br />\n//                         {user.projects[0].created_at} <br />\n//                         {user.projects[0].last_activity_at} <br />\n//                         <a href={user.projects[0].web_url}>See on web</a>\n//                         </p>"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAO,sCAAP;AACA,OAAO,YAAP;;;AAEA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;EAEtCC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,KAAK,EAAE,IADI;MAEXC,QAAQ,EAAE,KAFC;MAGXC,KAAK,EAAE,EAHI;MAIXC,QAAQ,EAAE,KAAKL,KAAL,CAAWK;IAJV,CAAb;EAMD;;EAEDC,iBAAiB,GAAG;IAClBC,KAAK,CAAE,WAAU,KAAKN,KAAL,CAAWI,QAAS,EAAhC,CAAL,CACGG,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;MACV,KAAKC,QAAL,CAAc;QACZT,QAAQ,EAAE,IADE;QAEZC,KAAK,EAAEO,MAAM,CAACE;MAFF,CAAd;IAID,CARL,EASKX,KAAD,IAAW;MACT,KAAKU,QAAL,CAAc;QACZT,QAAQ,EAAE,IADE;QAEZD;MAFY,CAAd;IAID,CAdL;EAgBD;;EAEDY,MAAM,GAAG;IACP,MAAM;MAAEZ,KAAF;MAASC,QAAT;MAAmBC;IAAnB,IAA6B,KAAKH,KAAxC;;IACA,IAAIC,KAAJ,EAAW;MACT,oBAAO;QAAA,sBAAaA,KAAK,CAACa,OAAnB;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFD,MAEO,IAAI,CAACZ,QAAL,EAAe;MACpB,oBAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFM,MAEA;MACL,oBACE;QAAA,UACGC,KAAK,CAACY,GAAN,CAAUC,IAAI,iBACX;UAAA,wBACI;YAAA,UAAKA,IAAI,CAACC;UAAV;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA,UAAID,IAAI,CAACE;UAAT;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI;YAAG,SAAS,EAAC,MAAb;YAAA,wBACcF,IAAI,CAACG,UADnB,oBAC+B;cAAA;cAAA;cAAA;YAAA,QAD/B,qBAEoBH,IAAI,CAACI,gBAFzB;UAAA;YAAA;YAAA;YAAA;UAAA,QAHJ,eAOI;YAAG,IAAI,EAAEJ,IAAI,CAACK,OAAd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAPJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADH;MADH;QAAA;QAAA;QAAA;MAAA,QADF;IAeD;EACF;;AAtDqC;;AAyDxC,eAAezB,WAAf,C,CAGF;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}